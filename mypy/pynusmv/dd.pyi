class BDD:
    def is_true(self) -> bool: ...
    def is_false(self) -> bool: ...
    def isnot_true(self) -> bool: ...
    def isnot_false(self) -> bool: ...
    def entailed(self, other: BDD) -> bool: ...
    def intersected(self, other: BDD) -> BDD: ...
    def iff(self, other: BDD) -> BDD: ...
    def imply(self, other: BDD) -> BDD: ...
    def diff(self, other: BDD) -> BDD: ...
    def union(self, other: BDD) -> BDD: ...
    def intersection(self, other: BDD) -> BDD: ...
    def __eq__(self, other) -> bool: ...
    def __ne__(self, other) -> bool: ...
    def __add__(self, other: BDD) -> BDD: ...
    def __or__(self, other: BDD) -> BDD: ...
    def __mul__(self, other: BDD) -> BDD: ...
    def __and__(self, other: BDD) -> BDD: ...
    def __sub__(self, other: BDD) -> BDD: ...
    def __xor__(self, other: BDD) -> BDD: ...
    def __neg__(self) -> BDD: ...
    def __invert__(self) -> BDD: ...
    @staticmethod
    def true() -> BDD: ...
    @staticmethod
    def false() -> BDD: ...

class State(BDD):
    def get_str_values(self) -> dict[str, str]: ...

class Inputs(BDD):
    def get_str_values(self) -> dict[str, str]: ...
